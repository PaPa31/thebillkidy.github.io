trigger:
- development

pool:
  vmImage: 'Ubuntu-16.04'

steps:
# https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=azdevops&tabs=schema#checkout
- checkout: self
  persistCredentials: true # set to 'true' to leave the OAuth token in the Git config after the initial fetch

- task: UseRubyVersion@0 # See: https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/tool/use-ruby-version?view=azdevops
  displayName: 'Use Ruby >= 2.5'

- script: 'gem install bundler'
  displayName: 'Install Bundler'

- script: 'bundle install'
  displayName: 'Install Jekyll and Dependencies'

- script: 'bundle exec jekyll build -d $(Build.ArtifactStagingDirectory)'
  displayName: 'Build Jekyll Static Site'

- script: 'cd $(Build.Repository.LocalPath); git checkout master; git checkout -b azure-pipelines-build'
  displayName: 'Create Build Branch based on Master'

- script: >
    cd $(Build.Repository.LocalPath);
    git rm -rf .; git clean -fxd;
    touch .nojekyll;
    touch README.md;
    echo "# My Blog" >> README.md;
  displayName: 'Clean Build Branch'

# - script: >
#     git config --global user.email "xavier.geerinck@gmail.com";
#     git config --global user.name "thebillkidy";
#   displayName: 'Configure Git User'

- script: 'cp -a $(Build.ArtifactStagingDirectory)/. $(Build.Repository.LocalPath)'
  displayName: 'Copy Artifact Files to Cleaned Build Branch'

- script: >
    cd $(Build.Repository.LocalPath);
    git add --all;
    git commit -m"Pipelines-Bot: Updated site via $(Build.SourceVersion)";
  displayName: 'Create our Commit'

- script: >
    cd $(Build.Repository.LocalPath);
    git checkout master;
    git merge azure-pipelines-build;
    git branch -d azure-pipelines-build;
  displayName: 'Merge azure-pipelines-build into master'

- script: >
    cd $(Build.Repository.LocalPath);
    git push origin master;
  displayName: 'Push changes to remote'

# The below will generate a .zip for us that we can download
# - task: PublishBuildArtifacts@1
#   displayName: 'Publish Artifact: _site'
#   inputs:
#     ArtifactName: _site